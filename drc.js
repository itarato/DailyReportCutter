// Generated by CoffeeScript 1.6.0
(function() {
  var Divider, DividerFactory, Label, LabelFactory,
    _this = this;

  console.log('Init');

  Label = (function() {

    Label.labels = [];

    Label.width = 100;

    function Label() {
      var label_html;
      console.log('New label');
      Label.labels.push(this);
      label_html = jQuery('<input type="textfield" value="activity"/>');
      jQuery('#label_bar').append(label_html);
      Label.labels.unshift(label_html);
      Label.updateAll();
    }

    Label.updateAll = function() {
      var bar_width_half, divider, divider_x, i, labelWidthHalf, label_x, prev_x, _i, _len, _ref;
      labelWidthHalf = Label.width >> 1;
      if (Divider.dividers.length === 0) {
        bar_width_half = jQuery('#label_bar').width() >> 1;
        return jQuery(Label.labels[0]).css('left', bar_width_half - labelWidthHalf);
      } else {
        prev_x = 0;
        _ref = Divider.dividers;
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          divider = _ref[i];
          divider_x = jQuery(divider).offset().left;
          label_x = (divider_x + prev_x) * 0.5 - labelWidthHalf;
          jQuery(Label.labels[i]).css('left', label_x);
          prev_x = divider_x;
        }
        return jQuery(Label.labels[i]).css('left', (jQuery('#label_bar').width() + prev_x) * 0.5 - labelWidthHalf);
      }
    };

    return Label;

  })();

  Divider = (function() {

    Divider.dividers = [];

    Divider.width = 10;

    Divider.counter = 0;

    Divider.activeDivider = null;

    Divider.prototype.html = null;

    Divider.prototype.count = Divider.counter++;

    function Divider(coordX) {
      var dividerWidthHalf,
        _this = this;
      dividerWidthHalf = Divider.width >> 1;
      console.log('New divider');
      Divider.dividers.push(this);
      this.html = jQuery('<div class="divider"/>');
      this.html.attr('id', 'divider_' + Divider.counter);
      this.html.css('left', event.offsetX - dividerWidthHalf);
      this.html.mousedown(this.mouseDown);
      this.html.click(function() {
        return _this.event.stopPropagation();
      });
      this.html.dblclick(this.doubleClick);
      jQuery('#time_bar').append(this.html);
      jQuery('#time_bar').mouseup(timeBarMouseUp);
      jQuery('#move_layer').mousemove(moveBarMouseMove);
      Divider.activeDivider = this;
      addLabel(0);
      Divider.counter++;
    }

    Divider.prototype.mouseDown = function(event) {};

    Divider.prototype.doubleClick = function(event) {};

    return Divider;

  })();

  LabelFactory = (function() {

    function LabelFactory() {}

    LabelFactory.addLabel = function() {
      return new Label();
    };

    return LabelFactory;

  })();

  DividerFactory = (function() {

    function DividerFactory() {}

    DividerFactory.addDivider = function(event) {
      return new Divider(event.offsetX);
    };

    return DividerFactory;

  })();

  ({
    timeBarMouseUp: function() {},
    moveBarMouseMove: function() {}
  });

  jQuery(function() {
    jQuery('#time_bar').click(DividerFactory.addDivider);
    return LabelFactory.addLabel();
  });

}).call(this);
